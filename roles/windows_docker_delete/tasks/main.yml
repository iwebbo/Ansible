# tasks file for windows_docker_delete
- name: Vérifier si Docker est installé
  ansible.windows.win_shell: |
    $docker_version = (Get-Command docker -ErrorAction SilentlyContinue).Version
    if ($docker_version) { Write-Output "Installed: $docker_version" }
  register: docker_installed
  ignore_errors: yes

- name: Arrêter le service Docker si présent
  ansible.windows.win_service:
    name: com.docker.service
    state: stopped
  when: "'Installed:' in docker_installed.stdout"

- name: Désinstaller Docker Desktop
  ansible.windows.win_shell: |
    $app = Get-WmiObject -Query "SELECT * FROM Win32_Product WHERE Name = 'Docker Desktop'"
    if ($app) { $app.Uninstall() }
  when: "'Installed:' in docker_installed.stdout"

- name: Supprimer les fichiers Docker restants
  ansible.windows.win_file:
    path: "{{ item }}"
    state: absent
  loop:
    - "C:\\Program Files\\Docker"
    - "C:\\Users\\{{ ansible_env.USERNAME }}\\AppData\\Local\\Docker"
    - "C:\\Users\\{{ ansible_env.USERNAME }}\\AppData\\Roaming\\Docker"
    - "C:\\Users\\{{ ansible_env.USERNAME }}\\.docker"
  when: "'Installed:' in docker_installed.stdout"

- name: Vérifier si le service Docker a été supprimé
  ansible.windows.win_service:
    name: com.docker.service
  register: docker_service_status
  ignore_errors: yes

- name: Supprimer le service Docker s'il existe encore
  ansible.windows.win_shell: "sc delete com.docker.service"
  when: docker_service_status.exists

- name: Redémarrer la machine après désinstallation
  ansible.windows.win_reboot:
    reboot_timeout: 600
  when: "'Installed:' in docker_installed.stdout"