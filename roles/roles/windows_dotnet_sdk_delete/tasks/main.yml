---
# tasks file for windows_dotnet_delete
- name: Check installation of .NET SDK
  win_command: dotnet --list-sdks
  register: dotnet_sdks
  failed_when: false
  changed_when: false

- name: Verify if any .NET SDK has been installed
  block:
    - name: Extract .NET SDK Version
      set_fact:
        installed_sdk_versions: "{{ 
          dotnet_sdks.stdout_lines | 
          map('regex_replace', '^(\\d+\\.\\d+\\.\\d+)\\s.*$', '\\1') | 
          list 
        }}"

    - name: Check .NET SDK installed
      set_fact:
        sdk_installed: "{{ 
          installed_sdk_versions | 
          select('match', '^' ~ sdk_version ~ '\\.\\d+$') | 
          list | length > 0 
        }}"

    - name: Find version installed
      set_fact:
        exact_sdk_version: "{{ 
          installed_sdk_versions | 
          select('match', '^' ~ sdk_version ~ '\\.\\d+$') | 
          first | default(None) 
        }}"

- name: Showing .NET SDK informations installed
  debug:
    msg: 
      - "SDK .NET recherché : {{ sdk_version }}"
      - "Versions SDK installées : {{ installed_sdk_versions }}"
      - "Version exacte trouvée : {{ exact_sdk_version }}"
      - "SDK installé : {{ sdk_installed }}"

- name: Uninstall SDK .NET 
  when: sdk_installed and exact_sdk_version is not none
  block:
    - name: Récupérer le chemin d'installation de dotnet
      win_shell: |
        $dotnetPath = $env:ProgramFiles + "\dotnet"
        if (Test-Path $dotnetPath) { 
          Write-Output $dotnetPath 
        }
      register: dotnet_install_path
      changed_when: false

    - name: Delete SDK 
      win_shell: |
        $sdkPath = "{{ dotnet_install_path.stdout | trim }}\sdk\{{ exact_sdk_version }}"
        if (Test-Path $sdkPath) {
          Remove-Item -Path $sdkPath -Recurse -Force
          Write-Output "SDK {{ exact_sdk_version }} supprimé"
        }
      register: sdk_removal_result
      changed_when: sdk_removal_result.stdout is defined

    - name: Clean-up Runtime .NET SDK
      win_shell: |
        $runtimePath = "{{ dotnet_install_path.stdout | trim }}\shared\Microsoft.NETCore.App\{{ exact_sdk_version }}"
        if (Test-Path $runtimePath) {
          Remove-Item -Path $runtimePath -Recurse -Force
          Write-Output "Runtime {{ exact_sdk_version }} supprimé"
        }
      register: runtime_removal_result
      changed_when: runtime_removal_result.stdout is defined

    - name: Check delete .NET SDK
      win_command: dotnet --list-sdks
      register: dotnet_sdks_after_removal
      changed_when: false
      failed_when: false

    - name: Showing result of deletion
      debug:
        msg: 
          - "SDK {{ exact_sdk_version }} supprimé"
          - "SDK restants : {{ dotnet_sdks_after_removal.stdout_lines }}"

- name: Warning no .NET SDK installed
  when: not sdk_installed
  debug:
    msg: "Le SDK .NET {{ sdk_version }} n'est pas installé sur ce système."