---
# tasks file for windows_python_chocolatey_install
- name: Check installation of Chocolatey
  win_stat:
    path: C:\ProgramData\chocolatey\choco.exe
  register: choco_stat

- name: Exit if chocolatey isn't present
  fail:
    msg: "{{ chocolatey_missing_message }}"
  when: not choco_stat.stat.exists

- name: Check package {{ package_name }} if already installed
  win_chocolatey_facts:
  register: chocolatey_facts
  when: package_name != ""

- name: Check package installation (already present)
  set_fact:
    package_installed: "{{ (chocolatey_facts.ansible_facts.packages | default([]) | selectattr('name', 'equalto', package_name) | list | length > 0) if chocolatey_facts.ansible_facts.packages is defined else false }}"
    package_current_version: "{{ (chocolatey_facts.ansible_facts.packages | default([]) | selectattr('name', 'equalto', package_name) | map(attribute='version') | list | first) if (chocolatey_facts.ansible_facts.packages is defined and (chocolatey_facts.ansible_facts.packages | default([]) | selectattr('name', 'equalto', package_name) | list | length > 0)) else '' }}"
  when: package_name != ""

- name: Status of Package
  debug:
    msg: "Le package {{ package_name }} {{ 'est déjà installé en version ' + package_current_version if package_installed else 'n''est pas installé' }}"
  when: package_name != ""

# Only for Python
- name: Configuration dedicated for Python
  set_fact:
    install_params: "{{ '/InstallDir:' + python_install_dir if python_install_dir else '' }}"
  when: 
    - package_name == "python" or package_name == "python3"

- name: Installation/Update of {{ package_name }} from Chocolatey
  win_chocolatey:
    name: "{{ package_name }}"
    version: "{{ package_version | default(omit) }}"
    state: "{{ package_state }}"
    force: "{{ force_install }}"
    source: "{{ chocolatey_source }}"
    timeout: "{{ chocolatey_timeout }}"
    package_params: "{{ install_params | default(omit) }}"
  register: choco_install
  when: package_name != ""

# Post-installation only for Python
- name: post-installation of Python
  block:
    - name: Update pip for Python
      win_command: python -m pip install --upgrade pip
      when: python_install_pip | bool
      
    - name: Installation of package Python (pip)
      win_command: python -m pip install {{ item }}
      loop: "{{ python_default_packages }}"
      when: python_default_packages | length > 0
  when: 
    - package_name == "python" or package_name == "python3"
    - choco_install.changed

- name: Status of the installation
  debug:
    msg: "{{ package_name }} version {{ package_current_version if package_installed and not choco_install.changed else (package_version if package_version else 'latest') }} {{ 'est déjà installé' if package_installed and not choco_install.changed else 'a été installé avec succès' }}"
  when: package_name != ""